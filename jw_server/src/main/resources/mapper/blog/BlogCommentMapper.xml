<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jw_server.dao.blog.mapper.BlogCommentMapper">

    <select id="getBlogFrontParentCommentPageVO" resultType="com.jw_server.dao.blog.vo.BlogFrontCommentVO">
        SELECT
            bc.comment_id, bc.article_id, bc.parent_id, bc.user_id,
            su1.nickname, su1.avatar, bc.comment_content, bc.to_user_id,
            bc.comment_agree, bc.comment_disagree, bc.create_time
        FROM
            blog_comment AS bc
            LEFT JOIN sys_user AS su1 ON bc.user_id = su1.id
        WHERE
            bc.article_id = #{articleId}
            AND bc.parent_id = #{parentId}
            AND bc.comment_check = '1'
            AND bc.is_deleted='0'
            ORDER BY bc.create_time DESC


    </select>

    <select id="getBlogFrontChildCommentPageVO" resultType="com.jw_server.dao.blog.vo.BlogFrontCommentVO">
        SELECT
            bc.comment_id, bc.article_id, bc.parent_id, bc.user_id,
            su1.nickname, su1.avatar, bc.comment_content, bc.to_user_id,
            su2.nickname as to_nickname, bc.comment_agree, bc.comment_disagree, bc.create_time
        FROM
            blog_comment AS bc
            LEFT JOIN sys_user AS su1 ON bc.user_id = su1.id
            LEFT JOIN sys_user AS su2 ON bc.to_user_id = su2.id
        WHERE
            bc.article_id = #{articleId}
            AND bc.parent_id = #{parentId}
            AND bc.comment_check = '1'
            AND bc.is_deleted='0'
            ORDER BY bc.create_time
    </select>

    <select id="getAllBlogFrontChildCommentPageVO" resultType="com.jw_server.dao.blog.vo.BlogFrontCommentVO">
        SELECT
            bc.comment_id, bc.article_id, bc.parent_id, bc.user_id,
            su1.nickname, su1.avatar, bc.comment_content, bc.to_user_id,
            su2.nickname as to_nickname, bc.comment_agree, bc.comment_disagree, bc.create_time
        FROM
            blog_comment AS bc
            LEFT JOIN sys_user AS su1 ON bc.user_id = su1.id
            LEFT JOIN sys_user AS su2 ON bc.to_user_id = su2.id
        WHERE
            bc.article_id = #{articleId}
            AND bc.parent_id = #{parentId}
            AND bc.comment_check = '1'
            AND bc.is_deleted='0'
            ORDER BY bc.create_time
    </select>


    <delete id="deleteComment" parameterType="java.lang.Integer">
        DELETE
        FROM
            blog_comment AS bc
        WHERE
            bc.comment_id = #{commentId}
            OR bc.parent_id = #{commentId}
    </delete>

    <select id="getAdminCommentPageList" resultType="com.jw_server.dao.blog.vo.BlogAdminCommentPageVO">
        SELECT
            bc.comment_id, su1.nickname, su1.avatar, su2.nickname as to_nickname,
            bc.comment_content, bc.comment_check, bc.create_time
        FROM
            blog_comment AS bc
            LEFT JOIN sys_user AS su1 ON bc.user_id = su1.id
            LEFT JOIN sys_user AS su2 ON bc.to_user_id = su2.id
        WHERE
            TRUE
            AND bc.is_deleted='0'
            <if test="queryCommentPageDTO.nickname !=null and queryCommentPageDTO.nickname != ''" >
                AND su1.nickname like concat('%',#{queryCommentPageDTO.nickname} ,'%')
            </if>
            <if test="queryCommentPageDTO.commentCheck !=null and queryCommentPageDTO.commentCheck != ''" >
                AND bc.comment_check = #{queryCommentPageDTO.commentCheck}
            </if>
        ORDER BY bc.create_time DESC
    </select>

    <update id="updateCommentCheckBatch" parameterType="java.util.List">
        UPDATE
            blog_comment AS bc
        SET
            bc.comment_check = '1'
        WHERE
            bc.comment_id IN
            <foreach collection="list" index="index" item="id" separator="," open="(" close=")">
                 #{id}
            </foreach>
    </update>
</mapper>
